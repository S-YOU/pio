#+TITLE: Pio の開発
#+FILETAGS: PIO
#+ICALENDAR_EXCLUDE_TAGS: noex

GitHub のリポジトリはこちら https://github.com/trema/pio

* Special Dates
* Notes
** ARP フォーマット                                                   :NOTE:
:LOGBOOK:
CLOCK: [2013-09-05 木 17:30]--[2013-09-05 木 17:31] =>  0:01
:END:
:PROPERTIES:
:ID:       CF2513EB-C01E-419C-BA81-0F9121DEA541
:END:
[2013-09-05 木 17:30]

近藤さんおすすめの ARP フォーマット解説。
http://www.n-study.com/network/arpheader.htm
** ICMP のテスト用データ                                              :NOTE:
:LOGBOOK:
CLOCK: [2013-09-22 日 22:25]--[2013-09-22 日 22:26] =>  0:01
:END:
:PROPERTIES:
:ID:       697F5C2C-9EE8-40E1-BB05-6B9619B59885
:END:
[2013-09-22 日 22:25]

https://gist.github.com/shun159/6647589
** ターミナルでペアプロするための設定                                 :NOTE:
:LOGBOOK:
CLOCK: [2013-07-22 月 09:29]--[2013-07-22 月 09:30] =>  0:01
:END:
:PROPERTIES:
:orgtrello-id: 5201cfedc4c8f14e25000f99
:ID:       B40E64E6-BFD3-4ABA-8F02-E7C180AF2737
:END:
[2013-07-22 月 09:29]

http://www.zeespencer.com/articles/building-a-remote-pairing-setup/
** ICMP フォーマット                                                  :NOTE:
:PROPERTIES:
:ID:       50EF068E-E7A1-4BEA-971F-9CF6AF9F3805
:END:
[2013-09-22 日 23:09]

http:///www.asahi-net.or.jp/~aa4t-nngk/ipttut/output/icmpheaders.html
** [[http://www.ruby-forum.com/topic/217963][any good tools for reading networking data with optional TLV - Ruby Forum]] [2013-06-21 Fri]
:PROPERTIES:
:ID:       1670C09A-20C7-45F9-B068-56376DFD864C
:END:
  BinData での optional TLV の使い方

** Trema/Pioでパケットを作ろう(1)                                     :NOTE:
:PROPERTIES:
:ID:       BA8B555C-1FBE-4FDD-BFAC-D80EE9366643
:END:
[2013-10-06 日 15:55]

http://d.hatena.ne.jp/stereocat/20131005/1380977633
** Trema/Pioでパケットを作ろう(2)                                     :NOTE:
:PROPERTIES:
:ID:       29F0265C-BF73-4749-A93D-20B0BF62C45E
:END:
[2013-10-06 日 15:55]

http://d.hatena.ne.jp/stereocat/20131006/1381028321
** Macros and Modules                                                 :NOTE:
:LOGBOOK:
CLOCK: [2013-11-08 金 11:03]--[2013-11-08 金 11:06] =>  0:03
:END:
[2013-11-08 金 11:03]

Ruby でマクロ的機能を実装する方法を解説したスクリーンキャスト．
http://www.rubytapas.com/episodes/27-Macros-and-Modules

Pio では BinData の bitxxx みたいなクラスメソッドをはじめとして
マクロ的な書き方を多用してるので見ておくと良い．
** Ruby method with argument hash with default values: how to DRY?    :NOTE:
:LOGBOOK:
CLOCK: [2014-02-27 木 11:23]--[2014-02-27 木 11:24] =>  0:01
:END:
[2014-02-27 木 11:23]

http://stackoverflow.com/questions/5931313/ruby-method-with-argument-hash-with-default-values-how-to-dry
** What's a nice clean way to use an options hash with defaults values as a parameter in ruby :NOTE:
:LOGBOOK:
CLOCK: [2014-02-27 木 11:26]--[2014-02-27 木 11:50] =>  0:24
:END:
[2014-02-27 木 11:26]

http://stackoverflow.com/questions/977535/whats-a-nice-clean-way-to-use-an-options-hash-with-defaults-values-as-a-paramet
* Tasks
このアイテムをそれぞれのリリースに割り振る。
** TODO bindata 1.6.0 の changelog をチェック
:PROPERTIES:
:ID:       A78CA230-2987-46F6-9992-541BCCBA6935
:END:
[2013-09-05 木 21:32]
** TODO 各 OpenFlow メッセージのパーサを作る
:PROPERTIES:
:ID:       E4B69E40-2A51-4EAF-9938-7E4533CAA5D5
:END:
[2013-09-06 金 19:27]
*** NEXT Trema::Hello の spec を見直し
** TODO Nick さんに README の英語をチェックしてもらう
:PROPERTIES:
:ID:       70FB87DD-7A14-4BE8-9635-5C5BD51B19D4
:END:
[2013-09-18 水 12:01]
** TODO phost を Pio で書き直す
:PROPERTIES:
:ID:       9B0ACC00-0157-4CA6-8ACA-EB3D1FE25091
:END:
[2013-09-24 火 15:36]

関連するタスク:
- [[*Trema/Pio%E3%81%A7%E3%83%91%E3%82%B1%E3%83%83%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86(1)][Trema/Pioでパケットを作ろう(1)]]
- [[*Trema/Pio%E3%81%A7%E3%83%91%E3%82%B1%E3%83%83%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86(2)][Trema/Pioでパケットを作ろう(2)]]
** TODO DHCP パーサを作る
:PROPERTIES:
:ID:       E4ED4593-A2A0-47A3-B4FC-6E4558570E8A
:END:
[2013-08-02 金 17:17]

近藤さんがすでにコーディング中。Pull-Request が来たらいっしょにリファ
クタリングして取り込む予定。
** TODO レアパケモンゲット機能
:LOGBOOK:
CLOCK: [2013-11-15 金 09:54]--[2013-11-15 金 09:57] =>  0:03
:END:
[2013-11-15 金 09:54]

万が一パースできなかった場合，パースできなかったバイナリを base64 か何
かにしたやつを例外メッセージに入れて出す．ユーザはそのメッセージをコピ
ペして GitHub のイシューに貼れば，こちらで簡単に解析できる．
** TODO ワンボタンリリース用 rake タスクを実装
[2013-11-27 水 14:39]
* Releases
** TODO 0.3.1 リリース                                       :VERSION0_3_1:
:LOGBOOK:
CLOCK: [2013-12-12 木 15:45]--[2013-12-12 木 15:46] =>  0:01
CLOCK: [2013-12-12 木 11:32]--[2013-12-12 木 11:39] =>  0:07
:END:
- State "TODO"       from "WAITING"    [2013-09-19 木 14:16]
- State "WAITING"    from "TODO"       [2013-09-06 金 17:17] \\
  0.2.0 が無事に出てから
:PROPERTIES:
:ID:       A8AFAB99-A14E-4C61-B241-16D95C31713F
:END:
[2013-09-05 木 17:29]

*** TODO Pio::Arp のリファクタリング
:LOGBOOK:
CLOCK: [2014-03-04 火 17:07]--[2014-03-04 火 17:17] =>  0:10
CLOCK: [2014-03-04 火 17:03]--[2014-03-04 火 17:07] =>  0:04
CLOCK: [2014-03-04 火 16:52]--[2014-03-04 火 16:54] =>  0:02
:END:
[2014-03-04 火 16:52]

**** NEXT arp_spec.rb を rspec_given で書き直し
:LOGBOOK:
CLOCK: [2014-03-05 水 11:04]--[2014-03-05 水 11:06] =>  0:02
:END:
[2014-03-05 水 11:04]
**** TODO Pio::Arp::Request のリファクタリング
:LOGBOOK:
CLOCK: [2014-02-27 木 18:19]--[2014-02-27 木 18:20] =>  0:01
:END:
[2014-02-27 木 18:19]
***** DONE spec/pio/arp/request_spec.rb を rspec_given で書き直す
CLOSED: [2014-03-04 火 15:48] SCHEDULED: <2014-03-04 火>
:LOGBOOK:
CLOCK: [2014-03-04 火 09:59]--[2014-03-04 火 10:01] =>  0:02
:END:
:PROPERTIES:
:Effort:   1:00
:END:
[2014-03-04 火 09:59]
***** DONE 定数 *_MAC_ADDRESS -> *_MAC に
CLOSED: [2014-02-27 木 18:27] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 18:20]--[2014-02-27 木 18:27] =>  0:07
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 18:20]

:source_mac とかのオプションと名前を合わせる.
***** DONE Message クラス, MessageUtil モジュールを使わずにベタに書く
CLOSED: [2014-03-05 水 14:58] SCHEDULED: <2014-03-05 水>
[2014-03-05 水 11:06]

***** DONE Pio::Arp::Request::Options を実装
CLOSED: [2014-03-05 水 16:10] SCHEDULED: <2014-03-05 水>
:LOGBOOK:
CLOCK: [2014-03-05 水 15:59]--[2014-03-05 水 16:10] =>  0:11
CLOCK: [2014-03-05 水 15:00]--[2014-03-05 水 15:40] =>  0:40
CLOCK: [2014-03-05 水 14:59]--[2014-03-05 水 15:00] =>  0:01
:END:
:PROPERTIES:
:Effort:   2:00
:END:
[2014-03-05 水 14:59]

**** TODO Pio::Arp::Reply のリファクタリング
:LOGBOOK:
CLOCK: [2014-03-04 火 16:46]--[2014-03-04 火 16:52] =>  0:06
CLOCK: [2014-03-04 火 16:08]--[2014-03-04 火 16:10] =>  0:02
:END:
[2014-03-04 火 16:08]
***** DONE spec/pio/arp/reply_spec.rb を rspec_given で書き直す
CLOSED: [2014-03-04 火 16:46] SCHEDULED: <2014-03-04 火>
:LOGBOOK:
CLOCK: [2014-03-04 火 16:10]--[2014-03-04 火 16:46] =>  0:36
:END:
:PROPERTIES:
:Effort:   1:00
:END:
[2014-03-04 火 16:10]

***** NEXT Message クラス, MessageUtil モジュールを使わずにベタに書く
:LOGBOOK:
CLOCK: [2014-03-05 水 11:06]--[2014-03-05 水 11:31] =>  0:25
:END:
[2014-03-05 水 11:06]

*** 10 High Value Development Chores to Start 2014 Right
:LOGBOOK:
CLOCK: [2014-02-27 木 16:41]--[2014-02-27 木 16:42] =>  0:01
CLOCK: [2014-02-27 木 15:58]--[2014-02-27 木 16:29] =>  0:31
CLOCK: [2014-02-27 木 15:48]--[2014-02-27 木 15:49] =>  0:01
:END:
[2014-02-27 木 15:48]
http://blog.codeclimate.com/blog/2014/01/02/ten-high-value-development-chores-to-start-2014-right/
**** DONE Delete inactive branches and Pull Requests
CLOSED: [2014-02-27 木 16:00] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 15:49]--[2014-02-27 木 15:50] =>  0:01
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 15:49]

**** TODO Optimize your deploys
:LOGBOOK:
CLOCK: [2014-02-27 木 15:50]--[2014-02-27 木 15:51] =>  0:01
:END:
[2014-02-27 木 15:50]

**** DONE Ratify a coding style guide
CLOSED: [2014-02-27 木 16:01]
:LOGBOOK:
CLOCK: [2014-02-27 木 15:51]--[2014-02-27 木 15:52] =>  0:01
:END:
[2014-02-27 木 15:51]

**** DONE Curate a core test suite
CLOSED: [2014-02-27 木 16:15]
:LOGBOOK:
CLOCK: [2014-02-27 木 15:52]--[2014-02-27 木 15:53] =>  0:01
:END:
[2014-02-27 木 15:52]

**** DONE Audit your app for vulnerabilities
CLOSED: [2014-02-27 木 16:04]
:LOGBOOK:
CLOCK: [2014-02-27 木 15:53]--[2014-02-27 木 15:55] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 15:53]

**** TODO Extract an open source project
[2014-02-27 木 15:55]
例の Wireshark Ruby ライブラリを GitHub に置く.
**** DONE Ditch your CI server
CLOSED: [2014-02-27 木 16:08]
:LOGBOOK:
CLOCK: [2014-02-27 木 15:55]--[2014-02-27 木 15:56] =>  0:01
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 15:55]

**** TODO Clean up your READMEs [0/2]
[2014-02-27 木 15:56]
- [ ] 古い/まちがった情報がないかチェック
- [ ] コード例を include して自動生成するように
**** DONE Aggregate and index your logs
CLOSED: [2014-02-27 木 16:11]
[2014-02-27 木 15:56]

**** DONE Track the quality of your team’s code as you commit
CLOSED: [2014-02-27 木 15:58] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 15:56]--[2014-02-27 木 15:58] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 15:56]
*** TODO #16 YARD の警告をつぶす                                      :ISSUE:
:LOGBOOK:
CLOCK: [2013-12-12 木 11:20]--[2013-12-12 木 11:25] =>  0:05
CLOCK: [2013-12-12 木 11:14]--[2013-12-12 木 11:16] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:ID:       4BBDC79B-FD56-4B2D-962A-07A328F71F9C
:END:
[2013-07-31 水 15:32]
**** DONE YARD の警告を確認
CLOSED: [2013-12-12 木 11:14] SCHEDULED: <2013-12-12 木>
:LOGBOOK:
CLOCK: [2013-12-12 木 10:49]--[2013-12-12 木 11:14] =>  0:25
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2013-12-12 木 10:49]

**** DONE イシューを作る
CLOSED: [2013-12-12 木 11:20] SCHEDULED: <2013-12-12 木>
:LOGBOOK:
CLOCK: [2013-12-12 木 11:16]--[2013-12-12 木 11:20] =>  0:04
:END:
[2013-12-12 木 11:16]

**** NEXT 警告を 1 つつぶす
:LOGBOOK:
CLOCK: [2013-12-27 金 11:25]--[2013-12-27 金 11:32] =>  0:07
:END:
[2013-12-27 金 11:25]
*** DONE Pio::Lldp::Options のリファクタリング
CLOSED: [2014-02-27 木 18:11]
:LOGBOOK:
CLOCK: [2014-02-27 木 16:42]--[2014-02-27 木 16:45] =>  0:03
:END:
[2014-02-27 木 16:42]
**** DONE Magic String を定数にする
CLOSED: [2014-02-27 木 18:11] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 16:46]--[2014-02-27 木 16:48] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 16:46]
*** DONE LLDP の必須オプションをリファクタリング
CLOSED: [2014-02-27 木 14:16] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 12:02]--[2014-02-27 木 12:07] =>  0:05
CLOCK: [2014-02-27 木 11:55]--[2014-02-27 木 11:56] =>  0:01
CLOCK: [2014-02-27 木 11:24]--[2014-02-27 木 11:26] =>  0:02
CLOCK: [2014-02-27 木 11:19]--[2014-02-27 木 11:23] =>  0:04
CLOCK: [2014-02-27 木 11:10]--[2014-02-27 木 11:13] =>  0:03
:END:
[2014-02-27 木 11:10]
**** DONE RubyTapas の #45: Hash Default Value を観る
CLOSED: [2014-02-27 木 11:19] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 11:15]--[2014-02-27 木 11:19] =>  0:04
CLOCK: [2014-02-27 木 11:13]--[2014-02-27 木 11:15] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 11:13]

http://www.rubytapas.com/episodes/45-Hash-Default-Value
関係なかった.他のエピソードだっけ？
**** DONE RubyTapas の #8: fetch as an Assertion を観る
CLOSED: [2014-02-27 木 11:55] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 11:52]--[2014-02-27 木 11:55] =>  0:03
CLOCK: [2014-02-27 木 11:50]--[2014-02-27 木 11:52] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 11:50]

http://www.rubytapas.com/episodes/8-fetch-as-an-Assertion
**** DONE RubyTapas の #12: #fetch for Defaults を観る
CLOSED: [2014-02-27 木 12:02] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 11:58]--[2014-02-27 木 12:02] =>  0:04
CLOCK: [2014-02-27 木 11:56]--[2014-02-27 木 11:58] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 11:56]
**** DONE RubyTapas の #15: Advanced #fetch を観る
CLOSED: [2014-02-27 木 14:15] SCHEDULED: <2014-02-27 木>
:LOGBOOK:
CLOCK: [2014-02-27 木 12:08]--[2014-02-27 木 12:16] =>  0:08
CLOCK: [2014-02-27 木 12:07]--[2014-02-27 木 12:08] =>  0:01
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-02-27 木 12:07]
*** DONE rubocop の監視対象を増やす
CLOSED: [2013-12-12 木 11:32] SCHEDULED: <2013-12-12 木>
:LOGBOOK:
CLOCK: [2013-12-12 木 11:25]--[2013-12-12 木 11:32] =>  0:07
:END:
[2013-12-12 木 11:25]

*** DONE Respond to Travis CI <notifications@travis-ci.org> on [Broken] trema/pio#165 (develop - 79b3bee)
CLOSED: [2013-12-12 木 15:45] SCHEDULED: <2013-12-12 木>
:LOGBOOK:
CLOCK: [2013-12-12 木 15:30]--[2013-12-12 木 15:45] =>  0:15
:END:
[2013-12-12 木 15:28]
[[gnus:%5BGmail%5D.All%20Mail#52a921751b580_25ed6377786@2f551007-1e47-441a-a7a2-1e98feef45d6.mail][Email from Travis CI: {Broken} trema/pio#165 (develo]]
*** DONE pio の bindata を更新
CLOSED: [2014-01-16 木 16:47] SCHEDULED: <2014-01-16 木>
:LOGBOOK:
CLOCK: [2014-01-16 木 16:41]--[2014-01-16 木 16:47] =>  0:06
CLOCK: [2014-01-16 木 16:07]--[2014-01-16 木 16:08] =>  0:01
:END:
:PROPERTIES:
:Effort:   0:15
:END:
[2014-01-16 木 16:07]
*** CANCELED #15 LLDPフレーム構築の方法                             :ISSUE:
CLOSED: [2014-02-24 月 21:04]
- State "CANCELED"   from "TODO"       [2014-02-24 月 21:04] \\
  返事がないのでチケットを閉じた.
:LOGBOOK:
CLOCK: [2013-12-12 木 10:43]--[2013-12-12 木 10:49] =>  0:06
CLOCK: [2013-12-12 木 10:40]--[2013-12-12 木 10:43] =>  0:03
CLOCK: [2013-12-12 木 10:24]--[2013-12-12 木 10:26] =>  0:02
:END:
:PROPERTIES:
:Effort:   0:30
:END:
[2013-12-12 木 10:24]

https://github.com/trema/pio/issues/15
**** DONE System Name TLV 等のユースケースと API についてコメント
CLOSED: [2013-12-12 木 10:40] SCHEDULED: <2013-12-12 木>
:LOGBOOK:
CLOCK: [2013-12-12 木 10:39]--[2013-12-12 木 10:40] =>  0:01
:END:
[2013-12-12 木 10:39]

**** DONE @Keichi さんに ping
CLOSED: [2014-02-17 月 09:40]
:LOGBOOK:
CLOCK: [2013-12-27 金 11:20]--[2013-12-27 金 11:25] =>  0:05
:END:
[2013-12-27 金 11:20]

ユースケースくださいと言ったところコメントがないので、年が明けたら
ping してみよう。

**** CANCELED @Keichi さんからの返事待ち
CLOSED: [2014-02-24 月 21:04]
- State "CANCELED"   from "WAITING"    [2014-02-24 月 21:04] \\
  返事がないのでチケットを閉じた.
- State "WAITING"    from "TODO"       [2014-02-17 月 10:14]
:LOGBOOK:
CLOCK: [2014-02-17 月 10:39]--[2014-02-17 月 10:40] =>  0:01
CLOCK: [2014-02-17 月 10:14]--[2014-02-17 月 10:16] =>  0:02
:END:
[2014-02-17 月 10:14]

** TODO 0.3.2 リリース                                        :VERSION0_3_2:
:LOGBOOK:
CLOCK: [2013-12-12 木 10:26]--[2013-12-12 木 10:39] =>  0:13
:END:
[2013-12-12 木 10:26]

*** TODO flay に PR を送る (FlayTask が動かない件)
:LOGBOOK:
CLOCK: [2013-09-18 水 17:20]--[2013-09-18 水 17:21] =>  0:01
:END:
:PROPERTIES:
:ID:       BCAC8FBB-335B-4811-BF4B-16D81C22B711
:END:
[2013-09-18 水 17:20]
*** TODO pio/util.rb とかの適当に作った箇所のリファクタリング
:LOGBOOK:
CLOCK: [2013-11-14 木 19:11]--[2013-11-14 木 19:12] =>  0:01
:END:
[2013-11-14 木 19:11]
*** NEXT マクロの書き方を勉強
:LOGBOOK:
CLOCK: [2013-12-27 金 11:32]--[2013-12-27 金 11:41] =>  0:09
:END:
[2013-12-27 金 11:32]

情報源:
- [[http://www.rubytapas.com/episodes/27-Macros-and-Modules][#27: Macros and Modules]]
- [[http://devblog.avdi.org/2012/11/27/rubytapas-027-macros-and-modules/][Avdi Grimm のブログエントリ]]
